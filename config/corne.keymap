/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NAV 1
#define PROGRAM 2
#define NUMPAD 3

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
   &mo NAV &mt LSHIFT A &kp S &kp D &kp F &lt NUMPAD G   &kp H &kp J  &kp K     &kp L   &mt RSHIFT SEMI &mo NAV
   &mo PROGRAM &mt LCTRL Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &mo PROGRAM
                  &kp LALT &kp SPACE &kp LCMD   &kp ENTER &kp BSPC &kp ESC
                        >;
                };



                nav_layer {
                        bindings = <
   &kp GRAVE    &trans  &trans  &trans  &trans  &trans            &kp C_VOL_UP   &trans   &kp UP  &trans &trans &trans
   &trans &trans &trans &trans &trans &kp C_PP             &kp C_VOL_DN &kp LEFT &kp DOWN &kp RIGHT &trans &trans
   &trans  &trans &trans  &trans &trans   &kp C_PREV           &kp C_NEXT      &trans   &trans &trans    &trans &trans
                              &trans  &trans  &trans           &trans  &trans   &trans
                        >;
                };

                program_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TILDE  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT         &kp UNDER  &kp LPAR   &kp RPAR &kp EQUAL &kp PLUS &kp PIPE
   &trans &kp CARET  &kp AMPS  &kp KP_MULTIPLY &trans   &trans      &kp MINUS &kp LBRC &kp RBRC  &kp COLON &kp SQT &kp APOS
   &trans &trans   &trans &trans   &trans   &trans               &trans &kp LBKT  &kp RBKT  &trans &trans &trans
                             &trans &trans   &trans              &trans   &trans    &trans
                        >;
                };

                numpad_layer {

                        bindings = <
   &trans &trans &trans &trans &trans &trans      &kp KP_MULTIPLY &kp N7  &kp N8 &kp N9 &kp KP_PLUS &trans
   &trans &trans &trans &trans &trans &trans      &kp KP_DIVIDE &kp N4 &kp N5 &kp N6 &kp KP_MINUS &trans
   &trans &trans &trans &trans &trans &trans      &kp N0 &kp N1  &kp N2 &kp N3 &kp KP_EQUAL &trans
                        &trans &trans &trans      &trans   &trans    &trans
                        >;
                };
                
        };
};
